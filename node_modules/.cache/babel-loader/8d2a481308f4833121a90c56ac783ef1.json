{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\react-projects\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === '';\n\nconst Checkout = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formValid, setFormValid] = useState({\n    isNameValid: true,\n    isstreetValid: true,\n    isPostalValid: true,\n    isCityValid: true\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const name = nameInputRef.current.value;\n    const street = streetInputRef.current.value;\n    const postal = postalInputRef.current.value;\n    const city = cityInputRef.current.value;\n\n    if (!isEmpty(name)) {\n      setFormValid({\n        isNameValid: false\n      });\n    } else {\n      setFormValid({\n        isNameValid: true\n      });\n    }\n\n    if (!isEmpty(street)) {\n      setFormValid({\n        isstreetValid: false\n      });\n    } else {\n      setFormValid({\n        isstreetValid: true\n      });\n    }\n\n    if (!isEmpty(postal)) {\n      setFormValid({\n        isPostalValid: false\n      });\n    } else {\n      setFormValid({\n        isPostalValid: true\n      });\n    }\n\n    if (!isEmpty(city)) {\n      setFormValid({\n        isCityValid: false\n      });\n    } else {\n      setFormValid({\n        isCityValid: true\n      });\n    } // setFormValid({isNameValid = !isEmpty(name)})\n    // setFormValid({isstreetValid = !isEmpty(street)});\n    // setFormValid({isPostalValid = !isEmpty(postal)});\n    // setFormValid({isCityValid = !isEmpty(city)});\n\n\n    const isFormValid = formValid.isNameValid && formValid.isstreetValid && formValid.isPostalValid && formValid.isCityValid;\n\n    if (!isFormValid) {\n      return;\n    }\n\n    console.log(\"submitted.........\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), !formValid.isNameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: streetInputRef,\n        type: \"text\",\n        id: \"street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), !formValid.isstreetValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: postalInputRef,\n        type: \"text\",\n        id: \"postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), !formValid.isPostalValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: cityInputRef,\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), !formValid.isCityValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: \"pink\"\n        },\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"rVDBH6T2Cu58yCwBA/sh21kcy/s=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/react-projects/food-order-app/src/components/Cart/Checkout.js"],"names":["useRef","useState","styles","isEmpty","value","trim","Checkout","props","nameInputRef","streetInputRef","postalInputRef","cityInputRef","formValid","setFormValid","isNameValid","isstreetValid","isPostalValid","isCityValid","submitHandler","e","preventDefault","name","current","street","postal","city","isFormValid","console","log","form","control","actions","onCancel","backgroundColor"],"mappings":"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","sourcesContent":["import {useRef, useState} from \"react\";\r\nimport styles from \"./Checkout.module.css\";\r\n\r\nconst isEmpty=(value)=> value.trim() === '';\r\n\r\nconst Checkout = (props) => {\r\n    const nameInputRef = useRef();\r\n    const streetInputRef = useRef();\r\n    const postalInputRef = useRef();\r\n    const cityInputRef = useRef();\r\n\r\n\r\n    const [formValid,setFormValid] = useState({isNameValid:true,isstreetValid:true,isPostalValid:true,isCityValid:true});\r\n    \r\n    const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const name = nameInputRef.current.value;\r\n    const street = streetInputRef.current.value;\r\n    const postal = postalInputRef.current.value;\r\n    const city = cityInputRef.current.value;\r\n    \r\n    if(!isEmpty(name)){\r\n        setFormValid({isNameValid:false});\r\n    }else{\r\n        setFormValid({isNameValid:true});\r\n    }\r\n\r\n    if(!isEmpty(street)){\r\n        setFormValid({isstreetValid:false});\r\n    }else{\r\n        setFormValid({isstreetValid:true});\r\n    }\r\n\r\n    if(!isEmpty(postal)){\r\n        setFormValid({isPostalValid:false});\r\n    }else{\r\n        setFormValid({isPostalValid:true});\r\n    }\r\n\r\n    if(!isEmpty(city)){\r\n        setFormValid({isCityValid:false});\r\n    }else{\r\n        setFormValid({isCityValid:true});\r\n    }\r\n    // setFormValid({isNameValid = !isEmpty(name)})\r\n    // setFormValid({isstreetValid = !isEmpty(street)});\r\n    // setFormValid({isPostalValid = !isEmpty(postal)});\r\n    // setFormValid({isCityValid = !isEmpty(city)});\r\n\r\n    const isFormValid = formValid.isNameValid && formValid.isstreetValid && formValid.isPostalValid && formValid.isCityValid;\r\n\r\n    if(!isFormValid){\r\n        return;\r\n    }\r\n\r\n    console.log(\"submitted.........\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={styles.form}>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"name\">Your Name:</label>\r\n        <input ref={nameInputRef} type=\"text\" id=\"name\" />\r\n        {!formValid.isNameValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"street\">Street:</label>\r\n        <input ref={streetInputRef} type=\"text\" id=\"street\" />\r\n        {!formValid.isstreetValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"postal\">Postal Code:</label>\r\n        <input ref={postalInputRef}  type=\"text\" id=\"postal\" />\r\n        {!formValid.isPostalValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"city\">City:</label>\r\n        <input  ref={cityInputRef} type=\"text\" id=\"city\" />\r\n        {!formValid.isCityValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n\r\n      <div className={styles.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" style={{backgroundColor:\"pink\"}}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}