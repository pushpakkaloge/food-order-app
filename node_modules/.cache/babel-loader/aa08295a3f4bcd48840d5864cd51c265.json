{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\react-projects\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Checkout.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from \"react\";\nimport styles from \"./Checkout.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst isEmpty = value => value.trim() === \"\";\n\nconst Checkout = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const streetInputRef = useRef();\n  const postalInputRef = useRef();\n  const cityInputRef = useRef();\n  const [formValid, setFormValid] = useState({\n    isNameValid: true,\n    isstreetValid: true,\n    isPostalValid: true,\n    isCityValid: true\n  });\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const name = nameInputRef.current.value;\n    const street = streetInputRef.current.value;\n    const postal = postalInputRef.current.value;\n    const city = cityInputRef.current.value;\n    const isNameValid = !isEmpty(name);\n    const isstreetValid = !isEmpty(street);\n    const isCityValid = !isEmpty(city);\n    const isPostalValid = !isEmpty(postal);\n    setFormValid({\n      isNameValid: isNameValid,\n      isstreetValid: isstreetValid,\n      isPostalValid: isPostalValid,\n      isCityValid: isCityValid\n    });\n    const isFormValid = isNameValid && isstreetValid && isPostalValid && isCityValid;\n\n    if (!isFormValid) {\n      return;\n    }\n\n    props.onConfirm({\n      name: name,\n      street: street,\n      city: city,\n      postal: postal\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    className: styles.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !formValid.isNameValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"street\",\n        children: \"Street:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: streetInputRef,\n        type: \"text\",\n        id: \"street\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formValid.isstreetValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postal\",\n        children: \"Postal Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: postalInputRef,\n        type: \"text\",\n        id: \"postal\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formValid.isPostalValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.control,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"city\",\n        children: \"City:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: cityInputRef,\n        type: \"text\",\n        id: \"city\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), !formValid.isCityValid && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        style: {\n          backgroundColor: \"pink\"\n        },\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Checkout, \"lRC0/zr+0xPTDuUZAOfoJ/tY0ek=\");\n\n_c = Checkout;\nexport default Checkout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/react-projects/food-order-app/src/components/Cart/Checkout.js"],"names":["useRef","useState","styles","isEmpty","value","trim","Checkout","props","nameInputRef","streetInputRef","postalInputRef","cityInputRef","formValid","setFormValid","isNameValid","isstreetValid","isPostalValid","isCityValid","submitHandler","e","preventDefault","name","current","street","postal","city","isFormValid","onConfirm","form","control","actions","onCancel","backgroundColor"],"mappings":"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","sourcesContent":["import { useRef, useState } from \"react\";\r\nimport styles from \"./Checkout.module.css\";\r\n\r\nconst isEmpty = (value) => value.trim() === \"\";\r\n\r\nconst Checkout = (props) => {\r\n  const nameInputRef = useRef();\r\n  const streetInputRef = useRef();\r\n  const postalInputRef = useRef();\r\n  const cityInputRef = useRef();\r\n\r\n  const [formValid, setFormValid] = useState({\r\n    isNameValid: true,\r\n    isstreetValid: true,\r\n    isPostalValid: true,\r\n    isCityValid: true\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const name = nameInputRef.current.value;\r\n    const street = streetInputRef.current.value;\r\n    const postal = postalInputRef.current.value;\r\n    const city = cityInputRef.current.value;\r\n\r\n    const isNameValid = !isEmpty(name);\r\n    const isstreetValid = !isEmpty(street);\r\n    const isCityValid = !isEmpty(city);\r\n    const isPostalValid = !isEmpty(postal);\r\n\r\n    setFormValid({\r\n        isNameValid:isNameValid,\r\n        isstreetValid:isstreetValid,\r\n        isPostalValid:isPostalValid,\r\n        isCityValid:isCityValid\r\n    })\r\n\r\n    const isFormValid =\r\n      isNameValid &&\r\n      isstreetValid &&\r\n      isPostalValid &&\r\n      isCityValid;\r\n\r\n    if (!isFormValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n        name:name,\r\n        street:street,\r\n        city:city,\r\n        postal:postal\r\n    })\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={styles.form}>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"name\">Your Name:</label>\r\n        <input ref={nameInputRef} type=\"text\" id=\"name\" />\r\n        {!formValid.isNameValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"street\">Street:</label>\r\n        <input ref={streetInputRef} type=\"text\" id=\"street\" />\r\n        {!formValid.isstreetValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"postal\">Postal Code:</label>\r\n        <input ref={postalInputRef} type=\"text\" id=\"postal\" />\r\n        {!formValid.isPostalValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={styles.control}>\r\n        <label htmlFor=\"city\">City:</label>\r\n        <input ref={cityInputRef} type=\"text\" id=\"city\" />\r\n        {!formValid.isCityValid && <p>Please enter a valid name</p>}\r\n      </div>\r\n\r\n      <div className={styles.actions}>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" style={{ backgroundColor: \"pink\" }}>\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"]},"metadata":{},"sourceType":"module"}