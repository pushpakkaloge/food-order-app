{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADMIN\\\\Desktop\\\\react-projects\\\\food-order-app\\\\src\\\\components\\\\Cart\\\\Cart.js\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport Modal from \"../UI/Modal\";\nimport styles from \"./Cart.module.css\";\nimport CartContext from \"../../store/cart-context\";\nimport CartItem from \"./CartItem\";\nimport Checkout from \"./Checkout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Cart = props => {\n  _s();\n\n  const [isCheckout, setCheckout] = useState(false);\n  const cartCtx = useContext(CartContext);\n  const totalAmount = `$ ${cartCtx.totalAmount.toFixed(2)}`;\n  const hasItems = cartCtx.items.length > 0;\n\n  const cartItemRemoveHandler = id => {\n    cartCtx.removeItem(id);\n  };\n\n  const cartItemAddHandler = item => {\n    cartCtx.addItem({ ...item,\n      amount: 1\n    });\n  };\n\n  const cartItems = cartCtx.items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n    name: item.name,\n    amount: item.amount,\n    price: item.price,\n    onRemove: cartItemRemoveHandler.bind(null, item.id),\n    onAdd: cartItemAddHandler.bind(null, item)\n  }, item.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this));\n\n  const OrderButtonHandler = () => {\n    setCheckout(true);\n  }; //when user presses confirm button. Sending request to firebase\n\n\n  const onSubmitDataHandler = data => {\n    fetch(\"https://food-order-web-b944a-default-rtdb.firebaseio.com/orders.json\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        user: data,\n        orderItems: cartCtx.items\n      })\n    });\n  };\n\n  const modalActions = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.actions,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles[\"button--alt\"],\n      onClick: props.hideCart,\n      children: \"Close\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), hasItems && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.button,\n      onClick: OrderButtonHandler,\n      children: \"Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClick: props.hideCart,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles[\"cart-items\"],\n      children: cartItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.total,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Total Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: totalAmount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), isCheckout && /*#__PURE__*/_jsxDEV(Checkout, {\n      onConfirm: onSubmitDataHandler,\n      onCancel: props.hideCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), !isCheckout && modalActions]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Cart, \"gCYyogXPN30ZOYIvyxX7xmaeVo8=\");\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["C:/Users/ADMIN/Desktop/react-projects/food-order-app/src/components/Cart/Cart.js"],"names":["useContext","useState","Modal","styles","CartContext","CartItem","Checkout","Cart","props","isCheckout","setCheckout","cartCtx","totalAmount","toFixed","hasItems","items","length","cartItemRemoveHandler","id","removeItem","cartItemAddHandler","item","addItem","amount","cartItems","map","name","price","bind","OrderButtonHandler","onSubmitDataHandler","data","fetch","method","body","JSON","stringify","user","orderItems","modalActions","actions","hideCart","button","total"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport Modal from \"../UI/Modal\";\r\nimport styles from \"./Cart.module.css\";\r\nimport CartContext from \"../../store/cart-context\";\r\nimport CartItem from \"./CartItem\";\r\nimport Checkout from \"./Checkout\";\r\n\r\nconst Cart = (props) => {\r\n  const [isCheckout, setCheckout] = useState(false);\r\n\r\n  const cartCtx = useContext(CartContext);\r\n\r\n  const totalAmount = `$ ${cartCtx.totalAmount.toFixed(2)}`;\r\n  const hasItems = cartCtx.items.length > 0;\r\n\r\n  const cartItemRemoveHandler = (id) => {\r\n    cartCtx.removeItem(id);\r\n  };\r\n\r\n  const cartItemAddHandler = (item) => {\r\n    cartCtx.addItem({ ...item, amount: 1 });\r\n  };\r\n\r\n  const cartItems = cartCtx.items.map((item) => (\r\n    <CartItem\r\n      key={item.id}\r\n      name={item.name}\r\n      amount={item.amount}\r\n      price={item.price}\r\n      onRemove={cartItemRemoveHandler.bind(null, item.id)}\r\n      onAdd={cartItemAddHandler.bind(null, item)}\r\n    />\r\n  ));\r\n\r\n  const OrderButtonHandler = () => {\r\n    setCheckout(true);\r\n  };\r\n\r\n  //when user presses confirm button. Sending request to firebase\r\n  const onSubmitDataHandler = (data) => {\r\n    fetch(\r\n      \"https://food-order-web-b944a-default-rtdb.firebaseio.com/orders.json\",\r\n      {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          user:data,\r\n          orderItems:cartCtx.items\r\n        }),\r\n      }\r\n    );\r\n  };\r\n\r\n  const modalActions = (\r\n    <div className={styles.actions}>\r\n      <button className={styles[\"button--alt\"]} onClick={props.hideCart}>\r\n        Close\r\n      </button>\r\n      {hasItems && (\r\n        <button className={styles.button} onClick={OrderButtonHandler}>\r\n          Order\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Modal onClick={props.hideCart}>\r\n      <ul className={styles[\"cart-items\"]}>{cartItems}</ul>\r\n      <div className={styles.total}>\r\n        <span>Total Amount</span>\r\n        <span>{totalAmount}</span>\r\n      </div>\r\n      {isCheckout && (\r\n        <Checkout onConfirm={onSubmitDataHandler} onCancel={props.hideCart} />\r\n      )}\r\n      {!isCheckout && modalActions}\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}